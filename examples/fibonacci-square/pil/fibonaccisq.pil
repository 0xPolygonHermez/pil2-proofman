require "std_permutation.pil";
require "module.pil";

public in1;
public in2;
public out;

proofval value1;
proofval value2;

private function checkProofValues()
{
    mod * value1 - value2 === 0;
}

on final proof checkProofValues();

airtemplate FibonacciSquare(const int N = 2**8) {

    airval fibo1;
    airval fibo2;
    airval stage(2) fibo3;

    col fixed L1 = [1,0...];
    col witness a,b;

    // Inputs/Outputs
    L1 * (a - in1) === 0;
    L1 * (b - in2) === 0;
    L1' * (b - out) === 0;

    (a' - b) * (1 - L1') === 0;

    2*fibo1 - fibo2 === 0;

    permutation_assumes(MODULE_ID, [a*a + b*b, b'], 1 - L1');
}