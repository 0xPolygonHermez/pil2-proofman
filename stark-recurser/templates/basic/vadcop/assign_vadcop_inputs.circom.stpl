<%  let mut n_publics_inps = 0; %>

    <%= component_name %>.publics[<%= n_publics_inps %>] <== <%= prefix_vadcop %>circuitType;
<%  n_publics_inps += 1; %>

<%  if global_info.agg_types[stark_info.airgroup_id.unwrap() as usize].len() > 0  { %>
    for i in 0..global_info.agg_types[stark_info.airgroup_id.unwrap() as usize].len() {
        <%= component_name %>.publics[<%= n_publics_inps %> + i] <== <%= if !is_aggregation { prefix_vadcop.clone() } else { String::new() } %>aggregationTypes[i];
    }
<%  n_publics_inps += global_info.agg_types[stark_info.airgroup_id.unwrap() as usize].len() ; %>

    for i in 0..global_info.agg_types[stark_info.airgroup_id.unwrap() as usize].len() {
        <%= component_name %>.publics[<%= n_publics_inps %> + 3*i] <== <%= prefix_vadcop %>airgroupvalues[i][0];
        <%= component_name %>.publics[<%= n_publics_inps %> + 3*i + 1] <== <%= prefix_vadcop %>airgroupvalues[i][1];
        <%= component_name %>.publics[<%= n_publics_inps %> + 3*i + 2] <== <%= prefix_vadcop %>airgroupvalues[i][2];
    }
<%  n_publics_inps += 3*global_info.agg_types[stark_info.airgroup_id.unwrap() as usize].len() ; %>
<%  } %>

<%  for i in 0..global_info.n_challenges.len() + 1 { %>
    for(var i = 0; i < 4; i++) {
        <%= component_name %>.publics[<%= n_publics_inps %> + i] <== <%= prefix_vadcop %>root<%= i+1 %>[i];
    }

<%  n_publics_inps += 4; %>
<%  } %>

    for(var i = 0; i < 4; i++) {
        <%= component_name %>.publics[<%= n_publics_inps %> + i] <== <%= prefix_vadcop %>evalsHash[i];
    }
<%  n_publics_inps += 4; %>

<%  for i in 1..global_info.steps_fri.len() { %>
    for(var i = 0; i < 4; i++) {
        <%= component_name %>.publics[<%= n_publics_inps %> + i] <== <%= prefix_vadcop %>s<%= i %>_root[i];
    }
<%  n_publics_inps += 4; %>
<%  } %>

    for(var i = 0; i < 4; i++) {
        <%= component_name %>.publics[<%= n_publics_inps %> + i] <== <%= prefix_vadcop %>finalPolHash[i];
    }
<%  n_publics_inps += 4; %>

<%  if global_info.n_publics > 0 { %>
    for(var i = 0; i < <%= global_info.n_publics %>; i++) {
        <%= component_name %>.publics[<%= n_publics_inps %> + i] <== publics[i];
    }
<%  n_publics_inps += global_info.n_publics; %>
<%  } %>

    for(var i = 0; i < <%= global_info.n_challenges.iter().fold(4, |acc, &nc| acc + nc) %>; i++) {
        <%= component_name %>.publics[<%= n_publics_inps %> + 3*i] <== challenges[i][0];
        <%= component_name %>.publics[<%= n_publics_inps %> + 3*i+1] <== challenges[i][1];
        <%= component_name %>.publics[<%= n_publics_inps %> + 3*i+2] <== challenges[i][2];
    }
<%  n_publics_inps += 3*global_info.n_challenges.iter().fold(4, |acc, &nc| acc + nc); %>

    for(var i = 0; i < <%= global_info.steps_fri.len() + 1 %>; i++) {
        <%= component_name %>.publics[<%= n_publics_inps %> + 3*i] <== challengesFRISteps[i][0];
        <%= component_name %>.publics[<%= n_publics_inps %> + 3*i+1] <== challengesFRISteps[i][1];
        <%= component_name %>.publics[<%= n_publics_inps %> + 3*i+2] <== challengesFRISteps[i][2];
    }

<%  if set_enable_input { %>
    signal {binary} <%= prefix_vadcop %>isNull <== IsZero()(<%= prefix_vadcop %>circuitType);

    <%= component_name %>.enable <== 1 - <%= prefix_vadcop %>isNull;
<%  } %>
