{
 "program": [
  {
   "inSTEP": "1",
   "setA": 1,
   "line": 5,
   "fileName": "rom.zkasm",
   "lineStr": "        STEP => A"
  },
  {
   "CONST": "0",
   "assert": 1,
   "line": 6,
   "fileName": "rom.zkasm",
   "lineStr": "        0 :ASSERT"
  },
  {
   "CONST": "2",
   "setB": 1,
   "line": 8,
   "fileName": "rom.zkasm",
   "lineStr": "        2 => B"
  },
  {
   "CONST": "3",
   "setA": 1,
   "line": 9,
   "fileName": "rom.zkasm",
   "lineStr": "        3 => A"
  },
  {
   "inA": "1",
   "inB": "1",
   "setA": 1,
   "line": 10,
   "fileName": "rom.zkasm",
   "lineStr": "        A + B => A"
  },
  {
   "CONST": "5",
   "assert": 1,
   "line": 11,
   "fileName": "rom.zkasm",
   "lineStr": "        5           :ASSERT"
  },
  {
   "inA": "1",
   "CONST": "10",
   "offset": 0,
   "offsetLabel": "myvar",
   "mOp": 1,
   "mWR": 1,
   "assumeFree": 0,
   "line": 13,
   "useCTX": 0,
   "fileName": "rom.zkasm",
   "lineStr": "        A + 10      :MSTORE(myvar)"
  },
  {
   "freeInTag": {
    "op": ""
   },
   "inFREE": "1",
   "inFREE0": "0",
   "setA": 1,
   "offset": 0,
   "offsetLabel": "myvar",
   "mOp": 1,
   "mWR": 0,
   "assumeFree": 0,
   "line": 14,
   "useCTX": 0,
   "fileName": "rom.zkasm",
   "lineStr": "        $ => A      :MLOAD(myvar)"
  },
  {
   "CONST": "15",
   "assert": 1,
   "line": 16,
   "fileName": "rom.zkasm",
   "lineStr": "        15          :ASSERT"
  },
  {
   "CONST": "0",
   "setA": 1,
   "setB": 1,
   "setC": 1,
   "setD": 1,
   "setE": 1,
   "setCTX": 1,
   "setSP": 1,
   "setPC": 1,
   "line": 19,
   "fileName": "rom.zkasm",
   "lineStr": "        0 => A,B,C,D,E,CTX, SP, PC"
  },
  {
   "freeInTag": {
    "op": "functionCall",
    "funcName": "beforeLast",
    "params": []
   },
   "inFREE": "1",
   "inFREE0": "0",
   "JMP": 0,
   "JMPZ": 0,
   "JMPC": 0,
   "JMPN": 1,
   "return": 0,
   "call": 0,
   "free0IsByte": 0,
   "jmpAddr": 10,
   "jmpAddrLabel": "finalWait",
   "elseAddr": 11,
   "elseAddrLabel": "next",
   "line": 22,
   "fileName": "rom.zkasm",
   "lineStr": "        ${beforeLast()}  : JMPN(finalWait)"
  },
  {
   "JMP": 1,
   "JMPZ": 0,
   "JMPC": 0,
   "JMPN": 0,
   "return": 0,
   "call": 0,
   "jmpAddr": 0,
   "jmpAddrLabel": "start",
   "line": 24,
   "fileName": "rom.zkasm",
   "lineStr": "                         : JMP(start)"
  },
  {
   "inA": "1",
   "CONST": "1",
   "assert": 1,
   "line": 26,
   "fileName": "rom.zkasm",
   "lineStr": "        A + 1 :ASSERT"
  }
 ],
 "labels": {
  "start": 0,
  "end": 9,
  "finalWait": 10,
  "failAssert": 12
 },
 "constants": {}
}
