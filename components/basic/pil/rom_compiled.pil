
	// rom.zkasm:6                      STEP => A
	add_rom_line(0,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32768,0,0,0,0,0,0,0,0]);     // setA

	// rom.zkasm:7                      0 :ASSERT
	add_rom_line(1,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0]);         // LINE: 1, assert

	// rom.zkasm:9                      2 => B
	add_rom_line(2,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65536,2,0,0,0,0,0,0,0]);     // LINE: 2, setB, CONST: 2

	// rom.zkasm:10                     3 => A
	add_rom_line(3,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32768,3,0,0,0,0,0,0,0]);     // LINE: 3, setA, CONST: 3

	// rom.zkasm:11                     A + B => A
	add_rom_line(4,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32768,0,0,0,0,0,0,0,0]);     // LINE: 4, setA

	// rom.zkasm:12                     5           :ASSERT
	add_rom_line(5,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,0,0,0,0,0,0,0]);         // LINE: 5, assert, CONST: 5

	// rom.zkasm:14                     A + 600      :MSTORE(myvar1)
	add_rom_line(6,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,600,0,0,0,0,0,0,0]);       // LINE: 6, mOp, mWR, CONST: 600

	// rom.zkasm:15                     $ => A      :MLOAD(myvar1)
	add_rom_line(7,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32770,0,0,0,0,0,0,0,0]);     // LINE: 7, mOp, setA

	// rom.zkasm:19                     15          :ASSERT
	add_rom_line(8,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,15,0,0,0,0,0,0,0]);        // LINE: 8, assert, CONST: 15

	// rom.zkasm:22                     0 => A,B,C,D,E,CTX, SP, PC
	add_rom_line(9,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20938752,0,0,0,0,0,0,0,0]);  // LINE: 9, setA, setB, setC, setCTX, setD, setE, setPC, setSP

	// rom.zkasm:25                     ${beforeLast()}  : JMPN(finalWait)
	add_rom_line(10,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);        // LINE: 10

	// rom.zkasm:27                                      : JMP(start)
	add_rom_line(11,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);        // LINE: 11

	// rom.zkasm:29                     A + 1 :ASSERT
	last_rom_line(12,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0]);       // LINE: 12, assert, CONST: 1
